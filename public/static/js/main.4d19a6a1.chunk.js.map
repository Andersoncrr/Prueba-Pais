{"version":3,"sources":["https/saveData.js","https/countrys.js","components/Dropdown.js","components/Formulario.js","useForm/useForm.js","App.js","index.js"],"names":["axios","require","save","data","a","post","process","res","Swal","fire","countrys","get","console","log","options","value","label","flag","Dropdown","onchangeSelect","defaultValue","optionsSelect","useCallback","map","item","push","name","common","flags","png","orderData","sort","b","useEffect","className","onChange","placeholder","Formulario","initialState","useState","values","setValues","target","useForm","fullName","formValues","handleInputChange","reset","country","setCountry","uri","setUri","fullname","String","resetContry","handleSearch","e","preventDefault","trim","length","icon","title","showConfirmButton","timer","style","backgroundImage","onSubmit","type","autoComplete","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d19a6a1.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\nconst axios = require(\"axios\");\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const save = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/events`, data);\r\n    return res;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Digite un nombre\", \"error\");\r\n  }\r\n};\r\n","const axios = require(\"axios\");\r\nconst baseUrl = process.env.REACT_APP_API_COUNTRYS;\r\n\r\nexport const countrys = async () => {\r\n  try {\r\n    const res = await axios.get(baseUrl);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { countrys } from \"../https/countrys\";\r\n\r\nconst options = [{ value: \"\", label: \"\", flag: \"\" }];\r\n\r\nexport const Dropdown = ({ onchangeSelect, defaultValue }) => {\r\n  const optionsSelect = useCallback(async () => {\r\n    const country = await countrys();\r\n    country.data.map((item) =>\r\n      options.push({\r\n        value: item.name.common,\r\n        label: item.name.common,\r\n        flag: item.flags.png,\r\n      })\r\n    );\r\n    orderData();\r\n  }, []);\r\n\r\n  const orderData = () => {\r\n    options.sort((a, b) => {\r\n      if (a.value > b.value) {\r\n        return 1;\r\n      }\r\n      if (a.value < b.value) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    optionsSelect();\r\n  }, [optionsSelect]);\r\n\r\n  return (\r\n    <Select\r\n      className=\"Dropdown\"\r\n      value={defaultValue}\r\n      onChange={onchangeSelect}\r\n      options={options}\r\n      placeholder=\"Elige un país\"\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { save } from \"../https/saveData\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useForm } from \"../useForm/useForm\";\r\nimport { Dropdown } from \"./Dropdown\";\r\nimport \"./Formulario.css\";\r\n\r\nexport const Formulario = () => {\r\n  const [formValues, handleInputChange, reset] = useForm({ fullName: \"\" });\r\n  const [country, setCountry] = useState(\"\");\r\n  const [uri, setUri] = useState(\"\");\r\n  const data = {\r\n    fullname: String,\r\n    country: String,\r\n  };\r\n  const { fullName } = formValues;\r\n  const onchange = (value) => {\r\n    setCountry(value);\r\n    setUri(value.flag);\r\n  };\r\n\r\n  const resetContry = () => {\r\n    setCountry(\"\");\r\n    setUri(\"\");\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    reset();\r\n    resetContry();\r\n    if (fullName.trim().length <= 3 && fullName.trim().length >= 1) {\r\n      Swal.fire(\"Error\", \"Digite un nombre valido\", \"error\");\r\n    } else {\r\n      try {\r\n        data.fullname = e.target[0].value;\r\n        data.country = country.value;\r\n        const saveData = await save(data);\r\n        if (saveData) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Agregado correctamente\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        }\r\n        resetContry();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-center content 100vh\"\r\n      style={{\r\n        backgroundImage: `url(${uri})`,\r\n      }}\r\n    >\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3>País</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSearch}>\r\n            <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"></span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Digite su nombre completo\"\r\n                className=\"form-control\"\r\n                name=\"fullName\"\r\n                autoComplete=\"off\"\r\n                value={fullName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"></span>\r\n              </div>\r\n              <Dropdown defaultValue={country} onchangeSelect={onchange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Agregar\"\r\n                className=\"btn float-right login_btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import { Formulario } from \"./components/Formulario\";\n\nexport const App = () => {\n  return <Formulario />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}